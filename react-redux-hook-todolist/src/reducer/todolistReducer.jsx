// action lÃ  object vd: {type: 'increment'}
// Khá»Ÿi táº¡o state ban Ä‘áº§u tá»« localStorage (náº¿u cÃ³)
const initialState = JSON.parse(localStorage.getItem("reactTodolist")) || [];

const todoListReducer = (state = initialState, action) => {
    let newState;

    switch (action.type) {
        // --- TRÆ¯á»œNG Há»¢P THÃŠM Má»šI ---
        case 'add':
            newState = [];
            for (const el of state) {
                newState.push({ ...el });
            }
            newState.push({ ...action.payload });

            // ðŸ‘‰ LÆ°u vÃ o localStorage
            localStorage.setItem("reactTodolist", JSON.stringify(newState));

            return newState;

        // --- TRÆ¯á»œNG Há»¢P XÃ“A ---
        case 'remove':
            newState = [];
            const removeKey = Number(action.payload);
            for (const el of state) {
                if (el.key !== removeKey) {
                    newState.push({ ...el });
                }
            }

            // ðŸ‘‰ LÆ°u vÃ o localStorage
            localStorage.setItem("reactTodolist", JSON.stringify(newState));

            return newState;

        default:
            return state;
    }
}

export default todoListReducer;
